<p>小規模なmysqlDBでバックアップとテスト環境用のcronを整備する AmazonAWSなんかでは、サービスがバックアップを行なってくれるのだが。 お金を払わずに済むならそれが一番。 cronで一日一回バックアップをとり、一週間分保管しておくbash</p>
<pre>#!/bin/bash

#mysqldump.sh

USERNAME="username"
PASSWORD="password"
DAY=`date '+%Y%m%d'`
TIME=`date '+%H%M'`
FILENAME="all-$DAY.sql"

cd "/tmp/mysql_backup"

mysqldump -u $USERNAME --password=$PASSWORD --all-databases &gt;"/tmp/mysql_backup/$FILENAME"

if [ $? -ne 0 ]; then
echo "FAILED: create /tmp/mysql_backup/$FILENAME ($DAY $TIME)" &gt;&gt; "/tmp/mysql_backup/log"
exit 0
fi

sleep 1

# ２週間分のみ残す
find -name *.sql -type f -mtime +14 -exec rm {}
sleep 1

echo "SUCCESSED: Backuped to /tmp/mysql_backup/$FILENAME ($DAY $TIME)" &gt;&gt; "/tmp/mysql_backup/log"

</pre>
<p>ついでにcreate文を自動でdumpしておく。 dumpしたものは更にcsvへパースしてマニュアルとして吐き出すとよい。</p>
<pre>
#!/bin/bash

#mysqldump.sh

USERNAME="username"
PASSWORD="password"
DAY=`date '+%Y%m%d'`
TIME=`date '+%H%M'`
FILENAME="create.sql"

cd "/tmp/mysql_create"

mysqldump -u $USERNAME --password=$PASSWORD --all-databases &gt;"/tmp/mysql_create/$FILENAME"

if [ $? -ne 0 ]; then
echo "FAILED: create /tmp/mysql_create/$FILENAME ($DAY $TIME)" &gt;&gt; "/tmp/mysql_create/log"
exit 0
fi

echo "SUCCESSED: Backuped to /tmp/mysql_create/$FILENAME ($DAY $TIME)" &gt;&gt; "/tmp/mysql_create/log"

</pre>
<p>更についで。 テスト環境で生のデータベースをいじるために、テストデータベースを作りたい時に使うコマンド。 「このユーザーだけバグってる」などの修正時、即座に対応できるように。 （小規模なサービス限定だと思う）</p>
<pre>mysql -u username -p --default-character-set=utf8 DBname &lt; dumpedDB.sql
</pre>